version: '3'

services:

  app:
    container_name: app
    restart: always
    build: ./project
    ports:
      - 8000:8000
    depends_on:
      - redis
    networks:
      - custom_network
    command: gunicorn -w 1 -b :8000 app:app

  redis:
    image: redis:3.2.11
    container_name: redis
    networks:
      - custom_network
    ports:
      - 6379:6379
    command: redis-server --requirepass redis_password

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./infra-nginx/data/nginx.conf:/etc/nginx/nginx.conf
      - ./infra-nginx/data/conf:/etc/nginx/conf.d
      - ./infra-nginx/data/certbot/conf:/etc/letsencrypt
      - ./infra-nginx/data/certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - custom_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./infra-nginx/data/certbot/conf:/etc/letsencrypt
      - ./infra-nginx/data/certbot/www:/var/www/certbot
    networks:
      - custom_network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  custom_network:
    driver: bridge
